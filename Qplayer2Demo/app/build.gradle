import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

private static String getBuildTime() {
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("EEEE d MMMM yyyy HH:mm:ss")
    LocalDateTime now = LocalDateTime.now()
    String dateTime = dtf.format(now)
    return "\"${dateTime}\""
}

android {
    namespace 'com.qiniu.qplayer2'

    compileSdk 35

    defaultConfig {
        applicationId "com.qiniu.qplayer2"
        minSdk 21
        targetSdk 35
        versionCode 1
        versionName "$qplayer2_version"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        qplayer2Config {
            keyAlias "key-qplayer2"
            keyPassword "123456"
            storePassword "123456"
            storeFile rootProject.file("key")
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.qplayer2Config
        }
        debug {
            debuggable = true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.qplayer2Config
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    applicationVariants.all {
        variant ->
            variant.buildConfigField 'String', 'QPLAYER2_DEMO_BUILD_TIME', getBuildTime()
    }

//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
//    kotlinOptions {
//        jvmTarget = JavaVersion.VERSION_1_8.toString()
//    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.0.20"
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation "android.arch.lifecycle:runtime:1.1.1"
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.9'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'
    implementation('io.coil-kt:coil:2.7.0')
    implementation 'com.google.code.gson:gson:2.11.0'

    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.squareup.retrofit2:retrofit:2.11.0'
    implementation ('com.squareup.okhttp3:okhttp:4.12.0')
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.14'

    implementation files("libs/qndroid-miku-delivery-v1.1.2.jar")

    if (dependency_type == "remote") {
        implementation("com.qiniu:qplayer2-core:${qplayer2_version}")
        implementation("com.qiniu:qplayer2-ext:${qplayer2_version}")

    } else if(dependency_type == "source"){

        implementation project(path: ':qplayer2-ext')
        implementation project(path: ':qplayer2-core')
    } else {
        implementation files("libs/qplayer2-core-${qplayer2_version}-release.aar", "libs/qplayer2-ext-${qplayer2_version}-release.aar")
    }


    implementation 'com.tencent.bugly:crashreport:4.1.9.3'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:3.9.2'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

}
android.buildFeatures.buildConfig = true